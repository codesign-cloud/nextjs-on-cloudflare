name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
      - production
  pull_request:
    branches:
      - main
      - production
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test and Lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

  deploy-staging:
    runs-on: ubuntu-latest
    name: Deploy to Staging
    needs: test
    if: github.event_name == 'pull_request'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Cloudflare Workers (Staging)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env staging
          workingDirectory: .
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Notify staging deployment success
        if: success()
        run: |
          echo "üöÄ Deployment to staging successful!"
          if [ -n "${{ vars.CUSTOM_DOMAIN }}" ]; then
            echo "Staging URL: https://staging.${{ vars.CUSTOM_DOMAIN }}"
          elif [ -n "${{ vars.CLOUDFLARE_SUBDOMAIN }}" ]; then
            echo "Staging URL: https://nextjs-ssr-app-staging.${{ vars.CLOUDFLARE_SUBDOMAIN }}.workers.dev"
          else
            echo "Staging URL: https://nextjs-ssr-app-staging.your-subdomain.workers.dev"
          fi

      - name: Notify staging deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment to staging failed!"
          echo "Check the logs above for details."

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.12"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Deploy to Cloudflare Workers (Production)
        run: npm run deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Deployment to production successful!"
          if [ -n "${{ vars.CUSTOM_DOMAIN }}" ]; then
            echo "Application URL: https://${{ vars.CUSTOM_DOMAIN }}"
          elif [ -n "${{ vars.CLOUDFLARE_SUBDOMAIN }}" ]; then
            echo "Application URL: https://nextjs-ssr-app.${{ vars.CLOUDFLARE_SUBDOMAIN }}.workers.dev"
          else
            echo "Application URL: https://nextjs-ssr-app.your-subdomain.workers.dev"
          fi

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment to production failed!"
          echo "Check the logs above for details."
